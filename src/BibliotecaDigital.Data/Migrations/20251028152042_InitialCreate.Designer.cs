// <auto-generated />
using System;
using BibliotecaDigital.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace BibliotecaDigital.Data.Migrations
{
    [DbContext(typeof(BibliotecaDigitalContext))]
    [Migration("20251028152042_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaDigital.Domain.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_AUTOR");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_CRIACAO");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nacionalidade")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("NACIONALIDADE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("TB_AUTORES", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(1932),
                            DataNascimento = new DateTime(1839, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "machado@literatura.com.br",
                            Nacionalidade = "Brasileira",
                            Nome = "Machado de Assis"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(1935),
                            DataNascimento = new DateTime(1920, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "clarice@literatura.com.br",
                            Nacionalidade = "Brasileira",
                            Nome = "Clarice Lispector"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(1937),
                            DataNascimento = new DateTime(1912, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jorge@literatura.com.br",
                            Nacionalidade = "Brasileira",
                            Nome = "Jorge Amado"
                        });
                });

            modelBuilder.Entity("BibliotecaDigital.Domain.Models.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_EMPRESTIMO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfUsuario")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("NVARCHAR2(14)")
                        .HasColumnName("CPF_USUARIO");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_CRIACAO");

                    b.Property<DateTime>("DataDevolucaoPrevista")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_DEVOLUCAO_PREVISTA");

                    b.Property<DateTime?>("DataDevolucaoReal")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_DEVOLUCAO_REAL");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_EMPRESTIMO");

                    b.Property<bool>("Devolvido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BOOLEAN")
                        .HasDefaultValue(false)
                        .HasColumnName("DEVOLVIDO");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EMAIL_USUARIO");

                    b.Property<int>("LivroId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_LIVRO");

                    b.Property<decimal?>("MultaAtraso")
                        .HasColumnType("NUMBER(10,2)")
                        .HasColumnName("MULTA_ATRASO");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME_USUARIO");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("OBSERVACOES");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("STATUS");

                    b.Property<string>("TelefoneUsuario")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TELEFONE_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("CpfUsuario");

                    b.HasIndex("LivroId");

                    b.ToTable("TB_EMPRESTIMOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CpfUsuario = "123.456.789-01",
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2171),
                            DataDevolucaoPrevista = new DateTime(2025, 11, 2, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2170),
                            DataEmprestimo = new DateTime(2025, 10, 18, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2165),
                            Devolvido = false,
                            EmailUsuario = "joao.silva@email.com",
                            LivroId = 1,
                            NomeUsuario = "João Silva",
                            Status = "Ativo",
                            TelefoneUsuario = "(11) 98765-4321"
                        },
                        new
                        {
                            Id = 2,
                            CpfUsuario = "987.654.321-09",
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2174),
                            DataDevolucaoPrevista = new DateTime(2025, 11, 7, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2173),
                            DataEmprestimo = new DateTime(2025, 10, 23, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2173),
                            Devolvido = false,
                            EmailUsuario = "maria.santos@email.com",
                            LivroId = 3,
                            NomeUsuario = "Maria Santos",
                            Status = "Ativo",
                            TelefoneUsuario = "(11) 91234-5678"
                        },
                        new
                        {
                            Id = 3,
                            CpfUsuario = "111.222.333-44",
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2178),
                            DataDevolucaoPrevista = new DateTime(2025, 10, 23, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2176),
                            DataDevolucaoReal = new DateTime(2025, 10, 25, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2176),
                            DataEmprestimo = new DateTime(2025, 10, 8, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2175),
                            Devolvido = true,
                            EmailUsuario = "pedro.oliveira@email.com",
                            LivroId = 2,
                            MultaAtraso = 5.00m,
                            NomeUsuario = "Pedro Oliveira",
                            Observacoes = "Devolvido com 2 dias de atraso",
                            Status = "Finalizado",
                            TelefoneUsuario = "(11) 95555-1111"
                        });
                });

            modelBuilder.Entity("BibliotecaDigital.Domain.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_LIVRO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnoPublicacao")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ANO_PUBLICACAO");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BOOLEAN")
                        .HasDefaultValue(true)
                        .HasColumnName("ATIVO");

                    b.Property<int>("AutorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_AUTOR");

                    b.Property<string>("CapaUrl")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("CAPA_URL");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_CRIACAO");

                    b.Property<string>("Editora")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EDITORA");

                    b.Property<int>("EstoqueDisponivel")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ESTOQUE_DISPONIVEL");

                    b.Property<int>("EstoqueTotal")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ESTOQUE_TOTAL");

                    b.Property<string>("Genero")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("GENERO");

                    b.Property<string>("ISBN")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("ISBN");

                    b.Property<string>("Idioma")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("IDIOMA");

                    b.Property<int?>("NumeroEdicao")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMERO_EDICAO");

                    b.Property<int?>("NumeroPaginas")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMERO_PAGINAS");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("NUMBER(10,2)")
                        .HasColumnName("PRECO");

                    b.Property<string>("Sinopse")
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SINOPSE");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("TITULO");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("ISBN");

                    b.ToTable("TB_LIVROS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnoPublicacao = 1899,
                            Ativo = true,
                            AutorId = 1,
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2126),
                            Editora = "Garnier",
                            EstoqueDisponivel = 15,
                            EstoqueTotal = 20,
                            Genero = "Romance",
                            ISBN = "978-85-254-0001-1",
                            Idioma = "Português",
                            NumeroEdicao = 1,
                            NumeroPaginas = 256,
                            Preco = 29.90m,
                            Sinopse = "Romance narrado em primeira pessoa por Bentinho, que conta a história de seu amor por Capitu desde a infância até o casamento.",
                            Titulo = "Dom Casmurro"
                        },
                        new
                        {
                            Id = 2,
                            AnoPublicacao = 1890,
                            Ativo = true,
                            AutorId = 1,
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2129),
                            Editora = "Garnier",
                            EstoqueDisponivel = 8,
                            EstoqueTotal = 15,
                            Genero = "Romance",
                            ISBN = "978-85-254-0002-8",
                            Idioma = "Português",
                            NumeroEdicao = 1,
                            NumeroPaginas = 312,
                            Preco = 27.90m,
                            Sinopse = "Romance naturalista que retrata a vida em um cortiço no Rio de Janeiro do século XIX.",
                            Titulo = "O Cortiço"
                        },
                        new
                        {
                            Id = 3,
                            AnoPublicacao = 1977,
                            Ativo = true,
                            AutorId = 2,
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2133),
                            Editora = "José Olympio",
                            EstoqueDisponivel = 12,
                            EstoqueTotal = 18,
                            Genero = "Romance",
                            ISBN = "978-85-254-0003-5",
                            Idioma = "Português",
                            NumeroEdicao = 1,
                            NumeroPaginas = 87,
                            Preco = 24.90m,
                            Sinopse = "A história de Macabéa, uma jovem alagoana que vive no Rio de Janeiro, contada por Rodrigo S.M.",
                            Titulo = "A Hora da Estrela"
                        },
                        new
                        {
                            Id = 4,
                            AnoPublicacao = 1958,
                            Ativo = true,
                            AutorId = 3,
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2135),
                            Editora = "Martins",
                            EstoqueDisponivel = 6,
                            EstoqueTotal = 12,
                            Genero = "Romance",
                            ISBN = "978-85-254-0004-2",
                            Idioma = "Português",
                            NumeroEdicao = 1,
                            NumeroPaginas = 421,
                            Preco = 32.90m,
                            Sinopse = "Romance que retrata a vida na cidade de Ilhéus nos anos 1920, com foco na personagem Gabriela.",
                            Titulo = "Gabriela, Cravo e Canela"
                        });
                });

            modelBuilder.Entity("BibliotecaDigital.Domain.Models.PerfilAutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_PERFIL");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_AUTOR");

                    b.Property<string>("Biografia")
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BIOGRAFIA");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_CRIACAO");

                    b.Property<string>("FotoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("FOTO_URL");

                    b.Property<string>("Premios")
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR2(1000)")
                        .HasColumnName("PREMIOS");

                    b.Property<string>("RedesSociais")
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR2(1000)")
                        .HasColumnName("REDES_SOCIAIS");

                    b.Property<string>("Website")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("WEBSITE");

                    b.HasKey("Id");

                    b.HasIndex("AutorId")
                        .IsUnique();

                    b.ToTable("TB_PERFIS_AUTOR", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutorId = 1,
                            Biografia = "Joaquim Maria Machado de Assis foi um escritor brasileiro, considerado por muitos críticos o maior nome da literatura brasileira. Fundador da Academia Brasileira de Letras.",
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2090),
                            Premios = "Fundador da Academia Brasileira de Letras",
                            Website = "https://machadodeassis.org.br"
                        },
                        new
                        {
                            Id = 2,
                            AutorId = 2,
                            Biografia = "Clarice Lispector foi uma escritora e jornalista brasileira. Nascida na Ucrânia, considerada uma das escritoras brasileiras mais importantes do século XX.",
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2092),
                            Premios = "Prêmio Jabuti, Prêmio Fundação Cultural do Distrito Federal"
                        },
                        new
                        {
                            Id = 3,
                            AutorId = 3,
                            Biografia = "Jorge Amado foi um dos mais famosos e traduzidos escritores brasileiros de todos os tempos. Suas obras foram adaptadas para cinema, televisão e teatro.",
                            DataCriacao = new DateTime(2025, 10, 28, 15, 20, 42, 550, DateTimeKind.Utc).AddTicks(2093),
                            Premios = "Prêmio Stalin da Paz, Prêmio Jabuti"
                        });
                });

            modelBuilder.Entity("BibliotecaDigital.Domain.Models.Emprestimo", b =>
                {
                    b.HasOne("BibliotecaDigital.Domain.Models.Livro", "Livro")
                        .WithMany("Emprestimos")
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("BibliotecaDigital.Domain.Models.Livro", b =>
                {
                    b.HasOne("BibliotecaDigital.Domain.Models.Autor", "Autor")
                        .WithMany("Livros")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("BibliotecaDigital.Domain.Models.PerfilAutor", b =>
                {
                    b.HasOne("BibliotecaDigital.Domain.Models.Autor", "Autor")
                        .WithOne("Perfil")
                        .HasForeignKey("BibliotecaDigital.Domain.Models.PerfilAutor", "AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("BibliotecaDigital.Domain.Models.Autor", b =>
                {
                    b.Navigation("Livros");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("BibliotecaDigital.Domain.Models.Livro", b =>
                {
                    b.Navigation("Emprestimos");
                });
#pragma warning restore 612, 618
        }
    }
}
